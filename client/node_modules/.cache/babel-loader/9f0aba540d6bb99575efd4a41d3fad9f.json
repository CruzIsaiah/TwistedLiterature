{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, query, where, orderBy, startAt, endAt } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport Card from \"../components/Card\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const postsCollection = collection(db, \"posts\");\n        let postsQuery = query(postsCollection); // Apply search filter if searchTerm exists\n\n        if (searchTerm) {\n          const searchTermLower = searchTerm.toLowerCase();\n          postsQuery = query(postsCollection, where(\"title\", \">=\", searchTermLower), where(\"title\", \"<=\", searchTermLower + \"\\uf8ff\"), orderBy(\"title\"));\n        }\n\n        const postsSnapshot = await getDocs(postsQuery);\n        const fetchedPosts = postsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setPosts(fetchedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, [searchTerm]);\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title...\",\n      value: searchTerm,\n      onChange: handleSearchChange,\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description,\n      date: post.datePosted,\n      upvoteCount: post.upvotes,\n      commentCount: post.comments ? post.comments.length : 0 // Check if comments array exists before accessing length property\n\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadPosts, \"EyL2x44/Ps8swZ30p4yRfdl7gBU=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","query","where","orderBy","startAt","endAt","db","Card","ReadPosts","posts","setPosts","searchTerm","setSearchTerm","fetchPosts","postsCollection","postsQuery","searchTermLower","toLowerCase","postsSnapshot","fetchedPosts","docs","map","doc","id","data","error","console","handleSearchChange","event","target","value","post","title","author","description","datePosted","upvotes","comments","length"],"sources":["/Users/zay/TwistedLiterature/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, query, where, orderBy, startAt, endAt } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport Card from \"../components/Card\";\nimport \"./App.css\"\n\nconst ReadPosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const postsCollection = collection(db, \"posts\");\n        let postsQuery = query(postsCollection);\n\n        // Apply search filter if searchTerm exists\n        if (searchTerm) {\n          const searchTermLower = searchTerm.toLowerCase();\n          postsQuery = query(\n            postsCollection,\n            where(\"title\", \">=\", searchTermLower),\n            where(\"title\", \"<=\", searchTermLower + \"\\uf8ff\"),\n            orderBy(\"title\")\n          );\n        }\n\n        const postsSnapshot = await getDocs(postsQuery);\n        const fetchedPosts = postsSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setPosts(fetchedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, [searchTerm]);\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n  type=\"text\"\n  placeholder=\"Search by title...\"\n  value={searchTerm}\n  onChange={handleSearchChange}\n  className=\"search-bar\"\n/>\n      {posts.map((post) => (\n        <Card\n          key={post.id}\n          id={post.id}\n          title={post.title}\n          author={post.author}\n          description={post.description}\n          date={post.datePosted}\n          upvoteCount={post.upvotes}\n          commentCount={post.comments ? post.comments.length : 0} // Check if comments array exists before accessing length property\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,EAA8DC,KAA9D,QAA2E,oBAA3E;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,eAAe,GAAGf,UAAU,CAACO,EAAD,EAAK,OAAL,CAAlC;QACA,IAAIS,UAAU,GAAGd,KAAK,CAACa,eAAD,CAAtB,CAFE,CAIF;;QACA,IAAIH,UAAJ,EAAgB;UACd,MAAMK,eAAe,GAAGL,UAAU,CAACM,WAAX,EAAxB;UACAF,UAAU,GAAGd,KAAK,CAChBa,eADgB,EAEhBZ,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgBc,eAAhB,CAFW,EAGhBd,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgBc,eAAe,GAAG,QAAlC,CAHW,EAIhBb,OAAO,CAAC,OAAD,CAJS,CAAlB;QAMD;;QAED,MAAMe,aAAa,GAAG,MAAMlB,OAAO,CAACe,UAAD,CAAnC;QACA,MAAMI,YAAY,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,KAAU;UACpDC,EAAE,EAAED,GAAG,CAACC,EAD4C;UAEpD,GAAGD,GAAG,CAACE,IAAJ;QAFiD,CAAV,CAAvB,CAArB;QAIAd,QAAQ,CAACS,YAAD,CAAR;MACD,CArBD,CAqBE,OAAOM,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;MACD;IACF,CAzBD;;IA2BAZ,UAAU;EACX,CA7BQ,EA6BN,CAACF,UAAD,CA7BM,CAAT;;EA+BA,MAAMgB,kBAAkB,GAAIC,KAAD,IAAW;IACpChB,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MACJ,IAAI,EAAC,MADD;MAEJ,WAAW,EAAC,oBAFR;MAGJ,KAAK,EAAEnB,UAHH;MAIJ,QAAQ,EAAEgB,kBAJN;MAKJ,SAAS,EAAC;IALN;MAAA;MAAA;MAAA;IAAA,QADF,EAQGlB,KAAK,CAACY,GAAN,CAAWU,IAAD,iBACT,QAAC,IAAD;MAEE,EAAE,EAAEA,IAAI,CAACR,EAFX;MAGE,KAAK,EAAEQ,IAAI,CAACC,KAHd;MAIE,MAAM,EAAED,IAAI,CAACE,MAJf;MAKE,WAAW,EAAEF,IAAI,CAACG,WALpB;MAME,IAAI,EAAEH,IAAI,CAACI,UANb;MAOE,WAAW,EAAEJ,IAAI,CAACK,OAPpB;MAQE,YAAY,EAAEL,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAAL,CAAcC,MAA9B,GAAuC,CARvD,CAQ0D;;IAR1D,GACOP,IAAI,CAACR,EADZ;MAAA;MAAA;MAAA;IAAA,QADD,CARH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA9DD;;GAAMf,S;;KAAAA,S;AAgEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}