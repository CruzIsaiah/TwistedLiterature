{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/pages/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth, db } from \"../config/firebase\"; // Import the useAuth hook and db instance\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  const user = useAuth(); // Get the user object using the useAuth hook\n\n  const [username, setUsername] = useState(\"\"); // State to store the username\n\n  useEffect(() => {\n    // Function to fetch the username from Firestore based on the user's email\n    const fetchUsername = async () => {\n      try {\n        // Query the users collection for the document with the user's email\n        const userDoc = await db.collection(\"users\").doc(user.email).get();\n\n        if (userDoc.exists) {\n          // If the document exists, retrieve the username\n          const userData = userDoc.data();\n          setUsername(userData.username);\n        } else {\n          console.error(\"User document not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    }; // Call fetchUsername function only if the user object exists\n\n\n    if (user) {\n      fetchUsername();\n    }\n  }, [user]); // Run this effect whenever the user object changes\n  // Check if the user object exists before accessing its properties\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // Return a loading indicator while the authentication state is being resolved\n  }\n\n  const fetchUsername = async () => {\n    try {\n      const userDoc = await db.collection(\"users\").doc(user.email).get();\n\n      if (userDoc.exists) {\n        const userData = userDoc.data();\n        console.log(\"User data:\", userData); // Log the user data to see if the username is present\n\n        setUsername(userData.username);\n      } else {\n        console.error(\"User document not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching username:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const userDoc = await db.collection(\"users\").doc(user.email).get();\n\n        if (userDoc.exists) {\n          const userData = userDoc.data();\n          console.log(\"User data:\", userData); // Log the user data to see if the username is present\n\n          setUsername(userData.username);\n        } else {\n          console.error(\"User document not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n\n    if (user) {\n      fetchUsername();\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Created Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.metadata.creationTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"t60IYqYcbLoNAhiH+avR5whJjeM=\", false, function () {\n  return [useAuth];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","db","UserProfile","user","username","setUsername","fetchUsername","userDoc","collection","doc","email","get","exists","userData","data","console","error","log","uid","metadata","creationTime"],"sources":["/Users/zay/TwistedLiterature/client/src/pages/UserProfile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuth, db } from \"../config/firebase\"; // Import the useAuth hook and db instance\n\nconst UserProfile = () => {\n  const user = useAuth(); // Get the user object using the useAuth hook\n  const [username, setUsername] = useState(\"\"); // State to store the username\n\n  useEffect(() => {\n    // Function to fetch the username from Firestore based on the user's email\n    const fetchUsername = async () => {\n      try {\n        // Query the users collection for the document with the user's email\n        const userDoc = await db.collection(\"users\").doc(user.email).get();\n        if (userDoc.exists) {\n          // If the document exists, retrieve the username\n          const userData = userDoc.data();\n          setUsername(userData.username);\n        } else {\n          console.error(\"User document not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n\n    // Call fetchUsername function only if the user object exists\n    if (user) {\n      fetchUsername();\n    }\n  }, [user]); // Run this effect whenever the user object changes\n\n  // Check if the user object exists before accessing its properties\n  if (!user) {\n    return <div>Loading...</div>; // Return a loading indicator while the authentication state is being resolved\n  }\n  const fetchUsername = async () => {\n  try {\n    const userDoc = await db.collection(\"users\").doc(user.email).get();\n    if (userDoc.exists) {\n      const userData = userDoc.data();\n      console.log(\"User data:\", userData); // Log the user data to see if the username is present\n      setUsername(userData.username);\n    } else {\n      console.error(\"User document not found\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching username:\", error);\n  }\n};\nuseEffect(() => {\n  const fetchUsername = async () => {\n    try {\n      const userDoc = await db.collection(\"users\").doc(user.email).get();\n      if (userDoc.exists) {\n        const userData = userDoc.data();\n        console.log(\"User data:\", userData); // Log the user data to see if the username is present\n        setUsername(userData.username);\n      } else {\n        console.error(\"User document not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching username:\", error);\n    }\n  };\n\n  if (user) {\n    fetchUsername();\n  }\n}, [user]);\n\n\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <div>\n        <h2>User ID:</h2>\n        <p>{user.uid}</p>\n      </div>\n      <div>\n        <h2>User Email:</h2>\n        <p>{user.email}</p>\n      </div>\n      <div>\n        <h2>Username:</h2>\n        <p>{username}</p>\n      </div>\n      <div>\n        <h2>Account Created Date:</h2>\n        <p>{user.metadata.creationTime}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}