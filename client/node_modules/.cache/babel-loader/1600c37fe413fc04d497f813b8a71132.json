{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [commentCount, setCommentCount] = useState(0); // Fetch post data based on ID from Firestore\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const postDoc = await getDoc(doc(db, \"posts\", props.id));\n\n        if (postDoc.exists()) {\n          const postData = postDoc.data();\n          setUpvoteCount(postData.upvotes || 0); // Fetch comments associated with the post and count them\n\n          const commentsCollection = collection(db, `posts/${props.id}/comments`);\n          const commentsSnapshot = await getDocs(commentsCollection);\n          setCommentCount(commentsSnapshot.size); // Set comment count\n        } else {\n          console.log(\"No such document!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n\n    fetchPost();\n  }, [props.id]); // Run effect whenever the ID parameter changes\n  // Function to format the timestamp into a human-readable date and time\n\n  const formattedDate = date => {\n    if (date && date.seconds) {\n      const postDate = new Date(date.seconds * 1000);\n      const dateString = postDate.toLocaleDateString();\n      const timeString = postDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return `${dateString} ${timeString}`;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"edit/\" + props.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `viewPost/${props.id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"datePosted\",\n      children: formattedDate(props.date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upVotes\",\n      children: [upvoteCount, \" Upvotes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comments\",\n      children: [commentCount, \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"DsQ+z4m2LVFBgprbItaulvDi9Qs=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","more","Link","doc","getDoc","collection","getDocs","db","Card","props","upvoteCount","setUpvoteCount","commentCount","setCommentCount","fetchPost","postDoc","id","exists","postData","data","upvotes","commentsCollection","commentsSnapshot","size","console","log","error","formattedDate","date","seconds","postDate","Date","dateString","toLocaleDateString","timeString","toLocaleTimeString","hour","minute","textDecoration","title"],"sources":["/Users/zay/TwistedLiterature/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\n\nconst Card = (props) => {\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [commentCount, setCommentCount] = useState(0);\n\n  // Fetch post data based on ID from Firestore\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const postDoc = await getDoc(doc(db, \"posts\", props.id));\n        if (postDoc.exists()) {\n          const postData = postDoc.data();\n          setUpvoteCount(postData.upvotes || 0);\n          // Fetch comments associated with the post and count them\n          const commentsCollection = collection(db, `posts/${props.id}/comments`);\n          const commentsSnapshot = await getDocs(commentsCollection);\n          setCommentCount(commentsSnapshot.size); // Set comment count\n        } else {\n          console.log(\"No such document!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n\n    fetchPost();\n  }, [props.id]); // Run effect whenever the ID parameter changes\n\n  // Function to format the timestamp into a human-readable date and time\n  const formattedDate = (date) => {\n    if (date && date.seconds) {\n      const postDate = new Date(date.seconds * 1000);\n      const dateString = postDate.toLocaleDateString();\n      const timeString = postDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return `${dateString} ${timeString}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <div className=\"Card\">\n      <Link to={\"edit/\" + props.id}>\n        <img className=\"moreButton\" alt=\"edit button\" src={more} />\n      </Link>\n      <Link to={`viewPost/${props.id}`} style={{ textDecoration: 'none' }}>\n        <h2 className=\"title\">{props.title}</h2>\n      </Link>\n      <p className=\"datePosted\">{formattedDate(props.date)}</p>\n      <p className=\"upVotes\">{upvoteCount} Upvotes</p>\n      <p className=\"comments\">{commentCount} Comments</p>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}