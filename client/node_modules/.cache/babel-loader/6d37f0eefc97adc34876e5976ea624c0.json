{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/pages/ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc, updateDoc, collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [upvotes, setUpvotes] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]); // Fetch post data and upvotes count based on ID from Firestore\n\n  useEffect(() => {\n    const fetchPostData = async () => {\n      try {\n        const postDoc = await getDoc(doc(db, \"posts\", id));\n\n        if (postDoc.exists()) {\n          const postData = postDoc.data();\n          setPost(postData);\n          setUpvotes(postData.upvotes); // Set upvotes count from database\n\n          setComments(postData.comments || []); // Set comments array from database\n        } else {\n          console.log(\"No such document!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching post data:\", error);\n      }\n    };\n\n    fetchPostData();\n  }, [id]); // Run effect whenever the ID parameter changes\n\n  const updateUpvotes = async () => {\n    try {\n      // Update upvotes count in the database\n      await updateDoc(doc(db, \"posts\", id), {\n        upvotes: upvotes + 1\n      }); // Update the upvotes count in the UI\n\n      setUpvotes(count => count + 1);\n    } catch (error) {\n      console.error(\"Error updating upvotes count:\", error); // Handle error, e.g., display error message to the user\n    }\n  };\n\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n\n  const handleSubmitComment = async () => {\n    try {\n      // Add the comment to the comments collection in the post document\n      const commentDocRef = await addDoc(collection(db, `posts/${id}/comments`), {\n        comment,\n        timestamp: serverTimestamp()\n      });\n      console.log(\"Comment added with ID:\", commentDocRef.id); // Reset the comment input field\n\n      setComment(\"\"); // Update the comments array in the state\n\n      setComments([...comments, {\n        comment,\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error); // Handle error, e.g., display error message to the user\n    }\n  };\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this); // Display loading indicator while fetching data\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upvoteButton\",\n      onClick: updateUpvotes,\n      children: [\"Like: \", upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: handleCommentChange,\n        placeholder: \"Enter your comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewPost, \"ZNtJItYlA4WVuEJkJUXcK/6cG+Y=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","doc","getDoc","updateDoc","collection","addDoc","serverTimestamp","db","ViewPost","id","post","setPost","upvotes","setUpvotes","comment","setComment","comments","setComments","fetchPostData","postDoc","exists","postData","data","console","log","error","updateUpvotes","count","handleCommentChange","event","target","value","handleSubmitComment","commentDocRef","timestamp","Date","title","body","map","index"],"sources":["/Users/zay/TwistedLiterature/client/src/pages/ViewPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc, updateDoc, collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\n\nconst ViewPost = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  const [upvotes, setUpvotes] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n  // Fetch post data and upvotes count based on ID from Firestore\n  useEffect(() => {\n    const fetchPostData = async () => {\n      try {\n        const postDoc = await getDoc(doc(db, \"posts\", id));\n        if (postDoc.exists()) {\n          const postData = postDoc.data();\n          setPost(postData);\n          setUpvotes(postData.upvotes); // Set upvotes count from database\n          setComments(postData.comments || []); // Set comments array from database\n        } else {\n          console.log(\"No such document!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching post data:\", error);\n      }\n    };\n\n    fetchPostData();\n  }, [id]); // Run effect whenever the ID parameter changes\n\n  const updateUpvotes = async () => {\n    try {\n      // Update upvotes count in the database\n      await updateDoc(doc(db, \"posts\", id), {\n        upvotes: upvotes + 1,\n      });\n      // Update the upvotes count in the UI\n      setUpvotes((count) => count + 1);\n    } catch (error) {\n      console.error(\"Error updating upvotes count:\", error);\n      // Handle error, e.g., display error message to the user\n    }\n  };\n\n  const handleCommentChange = (event) => {\n    setComment(event.target.value);\n  };\n\n  const handleSubmitComment = async () => {\n    try {\n      // Add the comment to the comments collection in the post document\n      const commentDocRef = await addDoc(collection(db, `posts/${id}/comments`), {\n        comment,\n        timestamp: serverTimestamp(),\n      });\n      console.log(\"Comment added with ID:\", commentDocRef.id);\n      // Reset the comment input field\n      setComment(\"\");\n      // Update the comments array in the state\n      setComments([...comments, { comment, timestamp: new Date() }]);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      // Handle error, e.g., display error message to the user\n    }\n  };\n\n  if (!post) {\n    return <div>Loading...</div>; // Display loading indicator while fetching data\n  }\n\n  return (\n    <div className=\"PostCard\">\n      <h2 className=\"title\">{post.title}</h2>\n      {/* <h3 className=\"author\">{\"by \" + post.authorId}</h3> */}\n      <p className=\"description\">{post.body}</p>\n      {/* <p className=\"datePosted\">{formattedDate(post.date)}</p> */}\n      <button className=\"upvoteButton\" onClick={updateUpvotes}>\n        Like: {upvotes}\n      </button>\n      <div>\n        <textarea\n          value={comment}\n          onChange={handleCommentChange}\n          placeholder=\"Enter your comment\"\n        ></textarea>\n        <button onClick={handleSubmitComment}>Submit Comment</button>\n      </div>\n      <div>\n        <h3>Comments:</h3>\n        {comments.map((comment, index) => (\n          <div key={index}>\n            <p>{comment.comment}</p>\n            <p>{comment.timestamp}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}