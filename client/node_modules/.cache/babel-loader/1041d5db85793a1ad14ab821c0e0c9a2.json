{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/pages/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { db, storage } from \"../config/firebase\"; // Import the Firebase storage instance\n\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Import necessary storage functions\n\nimport \"./UserProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = _ref => {\n  _s();\n\n  let {\n    username,\n    bio,\n    profilePicture,\n    accountCreatedDate\n  } = _ref;\n  const [image, setImage] = useState(null); // State to store the uploaded image\n  // Function to handle file upload\n\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  }; // Function to handle image upload\n\n\n  const handleImageUpload = async () => {\n    if (!image) return; // Return if no image is selected\n\n    try {\n      // Create a storage reference for the image\n      const storageRef = ref(storage, `profile_images/${username}/${image.name}`); // Upload the image file to Firebase Storage\n\n      await uploadBytes(storageRef, image); // Get the download URL of the uploaded image\n\n      const imageUrl = await getDownloadURL(storageRef); // Here you can save the imageUrl to the user's profile in the database\n      // For simplicity, I'm logging the URL to the console\n\n      console.log(\"Image uploaded successfully. URL:\", imageUrl);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserProfile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile Picture:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profilePicture,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Profile Picture:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImageUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Created Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: accountCreatedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","db","storage","ref","uploadBytes","getDownloadURL","UserProfile","username","bio","profilePicture","accountCreatedDate","image","setImage","handleFileUpload","e","file","target","files","handleImageUpload","storageRef","name","imageUrl","console","log","error"],"sources":["/Users/zay/TwistedLiterature/client/src/pages/UserProfile.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { db, storage } from \"../config/firebase\"; // Import the Firebase storage instance\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Import necessary storage functions\nimport \"./UserProfile.css\";\n\nconst UserProfile = ({ username, bio, profilePicture, accountCreatedDate }) => {\n  const [image, setImage] = useState(null); // State to store the uploaded image\n\n  // Function to handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n\n  // Function to handle image upload\n  const handleImageUpload = async () => {\n    if (!image) return; // Return if no image is selected\n\n    try {\n      // Create a storage reference for the image\n      const storageRef = ref(storage, `profile_images/${username}/${image.name}`);\n\n      // Upload the image file to Firebase Storage\n      await uploadBytes(storageRef, image);\n\n      // Get the download URL of the uploaded image\n      const imageUrl = await getDownloadURL(storageRef);\n\n      // Here you can save the imageUrl to the user's profile in the database\n      // For simplicity, I'm logging the URL to the console\n      console.log(\"Image uploaded successfully. URL:\", imageUrl);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n\n  return (\n    <div className=\"UserProfile\">\n      <h1>User Profile</h1>\n      <div>\n        <h2>Username:</h2>\n        <p>{username}</p>\n      </div>\n      <div>\n        <h2>Bio:</h2>\n        <p>{bio}</p>\n      </div>\n      <div>\n        <h2>Profile Picture:</h2>\n        <img src={profilePicture} alt=\"Profile\" />\n      </div>\n      <div>\n        <h2>Upload Profile Picture:</h2>\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileUpload} />\n        <button onClick={handleImageUpload}>Upload</button>\n      </div>\n      <div>\n        <h2>Account Created Date:</h2>\n        <p>{accountCreatedDate}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,oBAA5B,C,CAAkD;;AAClD,SAASC,GAAT,EAAcC,WAAd,EAA2BC,cAA3B,QAAiD,kBAAjD,C,CAAqE;;AACrE,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,QAA2D;EAAA;;EAAA,IAA1D;IAAEC,QAAF;IAAYC,GAAZ;IAAiBC,cAAjB;IAAiCC;EAAjC,CAA0D;EAC7E,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC,CAD6E,CACnC;EAE1C;;EACA,MAAMa,gBAAgB,GAAIC,CAAD,IAAO;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;IACAL,QAAQ,CAACG,IAAD,CAAR;EACD,CAHD,CAJ6E,CAS7E;;;EACA,MAAMG,iBAAiB,GAAG,YAAY;IACpC,IAAI,CAACP,KAAL,EAAY,OADwB,CAChB;;IAEpB,IAAI;MACF;MACA,MAAMQ,UAAU,GAAGhB,GAAG,CAACD,OAAD,EAAW,kBAAiBK,QAAS,IAAGI,KAAK,CAACS,IAAK,EAAnD,CAAtB,CAFE,CAIF;;MACA,MAAMhB,WAAW,CAACe,UAAD,EAAaR,KAAb,CAAjB,CALE,CAOF;;MACA,MAAMU,QAAQ,GAAG,MAAMhB,cAAc,CAACc,UAAD,CAArC,CARE,CAUF;MACA;;MACAG,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,QAAjD;IACD,CAbD,CAaE,OAAOG,KAAP,EAAc;MACdF,OAAO,CAACE,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;IACD;EACF,CAnBD;;EAqBA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIjB;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAUE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,GAAG,EAAEC,cAAV;QAA0B,GAAG,EAAC;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAcE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,MAAM,EAAC,SAA1B;QAAoC,QAAQ,EAAEI;MAA9C;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEK,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eAmBE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIR;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAzDD;;GAAMJ,W;;KAAAA,W;AA2DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}