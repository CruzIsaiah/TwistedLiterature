{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport Comment from \"../components/Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const handleUpvote = () => {\n    setUpvoteCount(count => count + 1);\n  };\n\n  const addComment = () => {\n    if (newComment.trim() !== \"\") {\n      setComments([...comments, {\n        author: \"Anonymous\",\n        content: newComment\n      }]);\n      setNewComment(\"\");\n    }\n  }; // Function to format the timestamp into a human-readable date and time\n\n\n  const formattedDate = date => {\n    if (date && date.seconds) {\n      const postDate = new Date(date.seconds * 1000);\n      const dateString = postDate.toLocaleDateString();\n      const timeString = postDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return `${dateString} ${timeString}`;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"edit/\" + props.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"datePosted\",\n      children: formattedDate(props.date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"d5bUS2eDZzk6zvP/GR7J9hueP7U=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","more","Link","Comment","Card","props","upvoteCount","setUpvoteCount","comments","setComments","newComment","setNewComment","handleUpvote","count","addComment","trim","author","content","formattedDate","date","seconds","postDate","Date","dateString","toLocaleDateString","timeString","toLocaleTimeString","hour","minute","id","title","description"],"sources":["/Users/zay/TwistedLiterature/client/src/components/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport Comment from \"../components/Comment\";\n\nconst Card = (props) => {\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const handleUpvote = () => {\n    setUpvoteCount((count) => count + 1);\n  };\n\n  const addComment = () => {\n    if (newComment.trim() !== \"\") {\n      setComments([...comments, { author: \"Anonymous\", content: newComment }]);\n      setNewComment(\"\");\n    }\n  };\n\n  // Function to format the timestamp into a human-readable date and time\n  const formattedDate = (date) => {\n    if (date && date.seconds) {\n      const postDate = new Date(date.seconds * 1000);\n      const dateString = postDate.toLocaleDateString();\n      const timeString = postDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      return `${dateString} ${timeString}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <div className=\"Card\">\n      <Link to={\"edit/\" + props.id}>\n        <img className=\"moreButton\" alt=\"edit button\" src={more} />\n      </Link>\n      <h2 className=\"title\">{props.title}</h2>\n      <p className=\"description\">{props.description}</p>\n      <p className=\"datePosted\">{formattedDate(props.date)}</p>\n\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMY,YAAY,GAAG,MAAM;IACzBL,cAAc,CAAEM,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAd;EACD,CAFD;;EAIA,MAAMC,UAAU,GAAG,MAAM;IACvB,IAAIJ,UAAU,CAACK,IAAX,OAAsB,EAA1B,EAA8B;MAC5BN,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;QAAEQ,MAAM,EAAE,WAAV;QAAuBC,OAAO,EAAEP;MAAhC,CAAd,CAAD,CAAX;MACAC,aAAa,CAAC,EAAD,CAAb;IACD;EACF,CALD,CATsB,CAgBtB;;;EACA,MAAMO,aAAa,GAAIC,IAAD,IAAU;IAC9B,IAAIA,IAAI,IAAIA,IAAI,CAACC,OAAjB,EAA0B;MACxB,MAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACC,OAAL,GAAe,IAAxB,CAAjB;MACA,MAAMG,UAAU,GAAGF,QAAQ,CAACG,kBAAT,EAAnB;MACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,kBAAT,CAA4B,EAA5B,EAAgC;QAAEC,IAAI,EAAE,SAAR;QAAmBC,MAAM,EAAE;MAA3B,CAAhC,CAAnB;MACA,OAAQ,GAAEL,UAAW,IAAGE,UAAW,EAAnC;IACD;;IACD,OAAO,EAAP;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE,QAAC,IAAD;MAAM,EAAE,EAAE,UAAUpB,KAAK,CAACwB,EAA1B;MAAA,uBACE;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAC,aAAhC;QAA8C,GAAG,EAAE5B;MAAnD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAI,SAAS,EAAC,OAAd;MAAA,UAAuBI,KAAK,CAACyB;IAA7B;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAG,SAAS,EAAC,aAAb;MAAA,UAA4BzB,KAAK,CAAC0B;IAAlC;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAG,SAAS,EAAC,YAAb;MAAA,UAA2Bb,aAAa,CAACb,KAAK,CAACc,IAAP;IAAxC;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAtCD;;GAAMf,I;;KAAAA,I;AAwCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}