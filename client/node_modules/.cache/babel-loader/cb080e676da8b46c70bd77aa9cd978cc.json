{"ast":null,"code":"var _jsxFileName = \"/Users/zay/Desktop/TwistedLiterature/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\"; // Import db directly from firebase.js\n\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch posts from Firestore\n        const querySnapshot = await getDocs(collection(db, \"posts\"));\n        const tempPosts = [];\n        querySnapshot.forEach(doc => {\n          tempPosts.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setPosts(tempPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        author: post.authorId // Assuming the author field is named \"authorId\"\n        ,\n        description: post.body,\n        date: post.datePosted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Posts Yet \\uD83D\\uDE1E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","db","Card","ReadPosts","posts","setPosts","fetchData","querySnapshot","tempPosts","forEach","doc","push","id","data","error","console","display","flexDirection","length","map","post","marginBottom","title","authorId","body","datePosted"],"sources":["/Users/zay/Desktop/TwistedLiterature/client/src/pages/ReadPosts.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\"; // Import db directly from firebase.js\nimport Card from \"../components/Card\";\n\nconst ReadPosts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch posts from Firestore\n        const querySnapshot = await getDocs(collection(db, \"posts\"));\n        const tempPosts = [];\n        querySnapshot.forEach((doc) => {\n          tempPosts.push({ id: doc.id, ...doc.data() });\n        });\n        setPosts(tempPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"ReadPosts\" style={{ display: \"flex\", flexDirection: \"column\" }}>\n      {posts.length > 0 ? (\n        posts.map((post) => (\n          <div key={post.id} style={{ marginBottom: \"20px\" }}>\n<Card\n  id={post.id}\n  title={post.title}\n  author={post.authorId} // Assuming the author field is named \"authorId\"\n  description={post.body}\n  date={post.datePosted}\n  \n/>\n\n\n\n          </div>\n        ))\n      ) : (\n        <h2>No Posts Yet ðŸ˜ž</h2>\n      )}\n    </div>\n  );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,EAAT,QAAmB,oBAAnB,C,CAAyC;;AACzC,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF;QACA,MAAMC,aAAa,GAAG,MAAMP,OAAO,CAACD,UAAU,CAACE,EAAD,EAAK,OAAL,CAAX,CAAnC;QACA,MAAMO,SAAS,GAAG,EAAlB;QACAD,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;UAC7BF,SAAS,CAACG,IAAV,CAAe;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAV;YAAc,GAAGF,GAAG,CAACG,IAAJ;UAAjB,CAAf;QACD,CAFD;QAGAR,QAAQ,CAACG,SAAD,CAAR;MACD,CARD,CAQE,OAAOM,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;MACD;IACF,CAZD;;IAcAR,SAAS;EACV,CAhBQ,EAgBN,EAhBM,CAAT;EAkBA,oBACE;IAAK,SAAS,EAAC,WAAf;IAA2B,KAAK,EAAE;MAAEU,OAAO,EAAE,MAAX;MAAmBC,aAAa,EAAE;IAAlC,CAAlC;IAAA,UACGb,KAAK,CAACc,MAAN,GAAe,CAAf,GACCd,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACR;MAAmB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAhB,CAA1B;MAAA,uBACV,QAAC,IAAD;QACE,EAAE,EAAED,IAAI,CAACR,EADX;QAEE,KAAK,EAAEQ,IAAI,CAACE,KAFd;QAGE,MAAM,EAAEF,IAAI,CAACG,QAHf,CAGyB;QAHzB;QAIE,WAAW,EAAEH,IAAI,CAACI,IAJpB;QAKE,IAAI,EAAEJ,IAAI,CAACK;MALb;QAAA;QAAA;QAAA;MAAA;IADU,GAAUL,IAAI,CAACR,EAAf;MAAA;MAAA;MAAA;IAAA,QADF,CADD,gBAiBC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAlBJ;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA5CD;;GAAMT,S;;KAAAA,S;AA8CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}