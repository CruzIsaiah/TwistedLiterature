{"ast":null,"code":"var _jsxFileName = \"/Users/zay/TwistedLiterature/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const postsCollection = collection(db, \"posts\");\n        const postsSnapshot = await getDocs(postsCollection);\n        const fetchedPosts = postsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setPosts(fetchedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title\",\n      value: searchQuery,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description,\n      date: post.datePosted,\n      upvoteCount: post.upvotes,\n      commentCount: post.comments.length\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadPosts, \"6om9k9tMcV0GiWfZOf48e4P87pY=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","query","where","db","Card","ReadPosts","posts","setPosts","searchQuery","setSearchQuery","fetchPosts","postsCollection","postsSnapshot","fetchedPosts","docs","map","doc","id","data","error","console","handleSearch","event","target","value","filteredPosts","filter","post","title","toLowerCase","includes","author","description","datePosted","upvotes","comments","length"],"sources":["/Users/zay/TwistedLiterature/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport Card from \"../components/Card\";\n\nconst ReadPosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const postsCollection = collection(db, \"posts\");\n        const postsSnapshot = await getDocs(postsCollection);\n        const fetchedPosts = postsSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setPosts(fetchedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const filteredPosts = posts.filter((post) =>\n    post.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search by title\"\n        value={searchQuery}\n        onChange={handleSearch}\n      />\n      {filteredPosts.map((post) => (\n        <Card\n          key={post.id}\n          id={post.id}\n          title={post.title}\n          author={post.author}\n          description={post.description}\n          date={post.datePosted}\n          upvoteCount={post.upvotes}\n          commentCount={post.comments.length}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,eAAe,GAAGZ,UAAU,CAACI,EAAD,EAAK,OAAL,CAAlC;QACA,MAAMS,aAAa,GAAG,MAAMZ,OAAO,CAACW,eAAD,CAAnC;QACA,MAAME,YAAY,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,KAAU;UACpDC,EAAE,EAAED,GAAG,CAACC,EAD4C;UAEpD,GAAGD,GAAG,CAACE,IAAJ;QAFiD,CAAV,CAAvB,CAArB;QAIAX,QAAQ,CAACM,YAAD,CAAR;MACD,CARD,CAQE,OAAOM,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;MACD;IACF,CAZD;;IAcAT,UAAU;EACX,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,MAAMW,YAAY,GAAIC,KAAD,IAAW;IAC9Bb,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAGnB,KAAK,CAACoB,MAAN,CAAcC,IAAD,IACjCA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CADoB,CAAtB;EAIA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,iBAFd;MAGE,KAAK,EAAErB,WAHT;MAIE,QAAQ,EAAEa;IAJZ;MAAA;MAAA;MAAA;IAAA,QADF,EAOGI,aAAa,CAACV,GAAd,CAAmBY,IAAD,iBACjB,QAAC,IAAD;MAEE,EAAE,EAAEA,IAAI,CAACV,EAFX;MAGE,KAAK,EAAEU,IAAI,CAACC,KAHd;MAIE,MAAM,EAAED,IAAI,CAACI,MAJf;MAKE,WAAW,EAAEJ,IAAI,CAACK,WALpB;MAME,IAAI,EAAEL,IAAI,CAACM,UANb;MAOE,WAAW,EAAEN,IAAI,CAACO,OAPpB;MAQE,YAAY,EAAEP,IAAI,CAACQ,QAAL,CAAcC;IAR9B,GACOT,IAAI,CAACV,EADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAPH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CApDD;;GAAMZ,S;;KAAAA,S;AAsDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}